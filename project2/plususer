#!/bin/bash

while getopts ":h" opt; do
   case "${opt}" in
      h)
	echo "For creating a user, use this script, as ./plususer <username>. This will create a user and group with the following username, if no options are given, a default home directory and shell will be made. The default home directory is /home/<username> and default shell is /bin/bash.
The following options are:
	-s <shell>: Will create a shell for user.
	-d <home>: Will create a home directory for user.
	-g <groups>: Will put users in given groups.
	-h: Help page."
	exit 0
	;;
      ?)
	echo "Please use -h: For help"
        exit 1
        ;;
    esac
done

user=$1
shell=/bin/bash
home=/home/$user

shift

while getopts ":s:d:g:h" opt; do
   case "${opt}" in
      s)
        shell=${OPTARG}
	;;
      d)
	home=${OPTARG}
	;;
      g)
        groups=${OPTARG}
        echo $groups
        ;;
      h)
        echo "For creating a user, use this script, as ./plususer <username>. This will create a user and group with the following username, if no options are given, a default home directory and shell will be made. The default home directory is /home/<username> and default shell is /bin/bash.
The following options are:
	-s <shell>: Will create a shell for user.
	-d <home>: Will create a home directory for user.
	-g <groups>: Will put users in given groups.
	-h: Help page."
	exit 0
	;;
      :)
        echo "Error: -${OPTARG} requires an argument"
        exit 1
        ;;
      ?)
        echo "Please use the options of -s: For the specified shell, -d: For the home directory of the user, -g: Additional groups that the user wants to be added to. -h: For help"
        exit 1
        ;;
    esac
done

user_match=$(cat /etc/passwd | grep -w $user)

if [[ ! -z $user_match ]]; then
  echo "Username is already taken, please choose a different name"
  exit 1
fi

uid=1001
gid=1001
cont=true

while $cont; do
  match=$(cat /etc/passwd | grep -w $uid)
  if [[ -z $match && $uid -ne 65534 ]]; then
     cont=false
  else
     ((uid++))
  fi
done

cont=true

while $cont; do
  match=$(cat /etc/group | grep -w $gid)
  if [[ -z $match && $gid -ne 65534 ]]; then
     cont=false
  else
     ((gid++))
  fi
done

cat >> /etc/passwd <<- EOF
$user:*:$uid:$uid::$home:$shell
EOF

cat >> /etc/group <<- EOF
$user:x:$gid:
EOF

mkdir $home

shopt -s dotglob
for file in /etc/skel/*; do
   base=$(basename $file)
   cp -r $file "${home}/${base}"
done
shopt -u dotglob

chown -R $user:$user $home
chmod -R go=u, go-w $home
chmod go= $home

passwd $user
